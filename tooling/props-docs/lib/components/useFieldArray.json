{"tags":{"remarks":"[API](https://react-hook-form.com/api/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)","param":"props - useFieldArray props","returns":"methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn }","example":"```tsx\r\nfunction App() {\r\n  const { register, control, handleSubmit, reset, trigger, setError } = useForm({\r\n    defaultValues: {\r\n      test: []\r\n    }\r\n  });\r\n  const { fields, append } = useFieldArray({\r\n    control,\r\n    name: \"test\"\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(data => console.log(data))}>\r\n      {fields.map((item, index) => (\r\n         <input key={item.id} {...register(`test.${index}.firstName`)}  />\r\n      ))}\r\n      <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\r\n        append\r\n      </button>\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n```"},"filePath":"/Users/eelco/Development/appulse/saas-ui/packages/pro/apps/desktop/node_modules/@saas-ui/react/src/index.ts","description":"A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)","displayName":"useFieldArray","methods":[],"props":{"name":{"defaultValue":null,"description":"","name":"name","declarations":[{"fileName":"saas-ui/node_modules/react-hook-form/dist/types/fieldArray.d.ts","name":"TypeLiteral"}],"required":true,"type":{"name":"string"}},"keyName":{"defaultValue":null,"description":"","name":"keyName","declarations":[{"fileName":"saas-ui/node_modules/react-hook-form/dist/types/fieldArray.d.ts","name":"TypeLiteral"}],"required":false,"type":{"name":"string"}},"control":{"defaultValue":null,"description":"","name":"control","declarations":[{"fileName":"saas-ui/node_modules/react-hook-form/dist/types/fieldArray.d.ts","name":"TypeLiteral"}],"required":false,"type":{"name":"Control<TFieldValues, any>"}},"rules":{"defaultValue":null,"description":"","name":"rules","declarations":[{"fileName":"saas-ui/node_modules/react-hook-form/dist/types/fieldArray.d.ts","name":"TypeLiteral"}],"required":false,"type":{"name":"({ validate?: Validate<FieldArray<TFieldValues, TFieldArrayName>[]> | Record<string, Validate<FieldArray<TFieldValues, TFieldArrayName>>>; } & Pick<...>)"}},"shouldUnregister":{"defaultValue":null,"description":"","name":"shouldUnregister","declarations":[{"fileName":"saas-ui/node_modules/react-hook-form/dist/types/fieldArray.d.ts","name":"TypeLiteral"}],"required":false,"type":{"name":"boolean"}}}}