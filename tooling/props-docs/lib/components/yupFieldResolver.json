{"tags":{},"filePath":"/Users/eelco/Development/appulse/saas-ui/packages/saas-ui-forms/yup/src/index.ts","description":"","displayName":"yupFieldResolver","methods":[],"props":{"fields":{"defaultValue":null,"description":"","name":"fields","declarations":[],"required":true,"type":{"name":"any"}},"spec":{"defaultValue":null,"description":"","name":"spec","declarations":[],"required":true,"type":{"name":"ObjectSchemaSpec"}},"_sortErrors":{"defaultValue":null,"description":"","name":"_sortErrors","declarations":[],"required":true,"type":{"name":"any"}},"_nodes":{"defaultValue":null,"description":"","name":"_nodes","declarations":[],"required":true,"type":{"name":"any"}},"_excludedEdges":{"defaultValue":null,"description":"","name":"_excludedEdges","declarations":[],"required":true,"type":{"name":"any"}},"_typeCheck":{"defaultValue":null,"description":"","name":"_typeCheck","declarations":[],"required":true,"type":{"name":"(value: any) => value is any"}},"_cast":{"defaultValue":null,"description":"","name":"_cast","declarations":[],"required":true,"type":{"name":"(_value: any, options?: InternalOptions<any> | undefined) => any"}},"_validate":{"defaultValue":null,"description":"","name":"_validate","declarations":[],"required":true,"type":{"name":"(_value: any, opts: InternalOptions<any> | undefined, callback: Callback<any>) => void"}},"clone":{"defaultValue":null,"description":"","name":"clone","declarations":[],"required":true,"type":{"name":"(spec?: ObjectSchemaSpec | undefined) => AnyObjectSchema"}},"concat":{"defaultValue":null,"description":"","name":"concat","declarations":[],"required":true,"type":{"name":"{ <TOther extends ObjectSchema<any, any, any, any>>(schema: TOther): TOther extends ObjectSchema<infer S extends ObjectShape, infer C extends AnyObject, infer IType extends Maybe<...>, AssertsShape<...> | Extract<...>> ? ObjectSchema<...> : never; (schema: AnyObjectSchema): AnyObjectSchema; }"}},"getDefaultFromShape":{"defaultValue":null,"description":"","name":"getDefaultFromShape","declarations":[],"required":true,"type":{"name":"() => DefaultFromShape<any>"}},"_getDefault":{"defaultValue":null,"description":"","name":"_getDefault","declarations":[],"required":true,"type":{"name":"() => any"}},"shape":{"defaultValue":null,"description":"","name":"shape","declarations":[],"required":true,"type":{"name":"<TNextShape extends ObjectShape>(additions: TNextShape, excludes?: [string, string][] | undefined) => ObjectSchema<Assign<any, TNextShape>, any, any, any>"}},"pick":{"defaultValue":null,"description":"","name":"pick","declarations":[],"required":true,"type":{"name":"(keys: string[]) => any"}},"omit":{"defaultValue":null,"description":"","name":"omit","declarations":[],"required":true,"type":{"name":"(keys: string[]) => any"}},"from":{"defaultValue":null,"description":"","name":"from","declarations":[],"required":true,"type":{"name":"(from: string, to: string | number | symbol, alias?: boolean | undefined) => AnyObjectSchema"}},"noUnknown":{"defaultValue":null,"description":"","name":"noUnknown","declarations":[],"required":true,"type":{"name":"(noAllow?: boolean | undefined, message?: Message<{}> | undefined) => AnyObjectSchema"}},"unknown":{"defaultValue":null,"description":"","name":"unknown","declarations":[],"required":true,"type":{"name":"(allow?: boolean | undefined, message?: Message<{}> | undefined) => AnyObjectSchema"}},"transformKeys":{"defaultValue":null,"description":"","name":"transformKeys","declarations":[],"required":true,"type":{"name":"(fn: (key: string) => string) => AnyObjectSchema"}},"camelCase":{"defaultValue":null,"description":"","name":"camelCase","declarations":[],"required":true,"type":{"name":"() => AnyObjectSchema"}},"snakeCase":{"defaultValue":null,"description":"","name":"snakeCase","declarations":[],"required":true,"type":{"name":"() => AnyObjectSchema"}},"constantCase":{"defaultValue":null,"description":"","name":"constantCase","declarations":[],"required":true,"type":{"name":"() => AnyObjectSchema"}},"describe":{"defaultValue":null,"description":"","name":"describe","declarations":[],"required":true,"type":{"name":"() => SchemaObjectDescription"}},"type":{"defaultValue":null,"description":"","name":"type","declarations":[],"required":true,"type":{"name":"string"}},"__inputType":{"defaultValue":null,"description":"","name":"__inputType","declarations":[],"required":true,"type":{"name":"any"}},"__outputType":{"defaultValue":null,"description":"","name":"__outputType","declarations":[],"required":true,"type":{"name":"any"}},"__isYupSchema__":{"defaultValue":null,"description":"","name":"__isYupSchema__","declarations":[],"required":true,"type":{"name":"boolean"}},"deps":{"defaultValue":null,"description":"","name":"deps","declarations":[],"required":true,"type":{"name":"readonly string[]"}},"tests":{"defaultValue":null,"description":"","name":"tests","declarations":[],"required":true,"type":{"name":"Test[]"}},"transforms":{"defaultValue":null,"description":"","name":"transforms","declarations":[],"required":true,"type":{"name":"TransformFunction<AnySchema<any, any, any>>[]"}},"conditions":{"defaultValue":null,"description":"","name":"conditions","declarations":[],"required":true,"type":{"name":"any"}},"_mutate":{"defaultValue":null,"description":"","name":"_mutate","declarations":[],"required":false,"type":{"name":"any"}},"_typeError":{"defaultValue":null,"description":"","name":"_typeError","declarations":[],"required":false,"type":{"name":"any"}},"_whitelistError":{"defaultValue":null,"description":"","name":"_whitelistError","declarations":[],"required":false,"type":{"name":"any"}},"_blacklistError":{"defaultValue":null,"description":"","name":"_blacklistError","declarations":[],"required":false,"type":{"name":"any"}},"_whitelist":{"defaultValue":null,"description":"","name":"_whitelist","declarations":[],"required":true,"type":{"name":"ReferenceSet"}},"_blacklist":{"defaultValue":null,"description":"","name":"_blacklist","declarations":[],"required":true,"type":{"name":"ReferenceSet"}},"exclusiveTests":{"defaultValue":null,"description":"","name":"exclusiveTests","declarations":[],"required":true,"type":{"name":"Record<string, boolean>"}},"_type":{"defaultValue":null,"description":"","name":"_type","declarations":[],"required":true,"type":{"name":"string"}},"label":{"defaultValue":null,"description":"","name":"label","declarations":[],"required":true,"type":{"name":"(label: string) => AnyObjectSchema"}},"meta":{"defaultValue":null,"description":"","name":"meta","declarations":[],"required":true,"type":{"name":"{ (): Record<string, unknown> | undefined; (obj: Record<string, unknown>): AnyObjectSchema; }"}},"withMutation":{"defaultValue":null,"description":"","name":"withMutation","declarations":[],"required":true,"type":{"name":"<T>(fn: (schema: AnyObjectSchema) => T) => T"}},"isType":{"defaultValue":null,"description":"","name":"isType","declarations":[],"required":true,"type":{"name":"(v: any) => boolean"}},"resolve":{"defaultValue":null,"description":"","name":"resolve","declarations":[],"required":true,"type":{"name":"(options: ResolveOptions<any>) => AnyObjectSchema"}},"cast":{"defaultValue":null,"description":"@param value\n@param options","name":"cast","declarations":[],"required":true,"type":{"name":"(value: any, options?: CastOptions<any> | undefined) => any"}},"validate":{"defaultValue":null,"description":"","name":"validate","declarations":[],"required":true,"type":{"name":"(value: any, options?: ValidateOptions<any> | undefined) => Promise<any>"}},"validateSync":{"defaultValue":null,"description":"","name":"validateSync","declarations":[],"required":true,"type":{"name":"(value: any, options?: ValidateOptions<any> | undefined) => any"}},"isValid":{"defaultValue":null,"description":"","name":"isValid","declarations":[],"required":true,"type":{"name":"(value: any, options?: ValidateOptions<any> | undefined) => Promise<boolean>"}},"isValidSync":{"defaultValue":null,"description":"","name":"isValidSync","declarations":[],"required":true,"type":{"name":"(value: any, options?: ValidateOptions<any> | undefined) => value is any"}},"getDefault":{"defaultValue":null,"description":"","name":"getDefault","declarations":[],"required":true,"type":{"name":"(options?: ResolveOptions<any> | undefined) => any"}},"default":{"defaultValue":null,"description":"","name":"default","declarations":[],"required":true,"type":{"name":"(def: any) => any"}},"strict":{"defaultValue":null,"description":"","name":"strict","declarations":[],"required":true,"type":{"name":"(isStrict?: boolean | undefined) => AnyObjectSchema"}},"_isPresent":{"defaultValue":null,"description":"","name":"_isPresent","declarations":[],"required":true,"type":{"name":"(value: unknown) => boolean"}},"defined":{"defaultValue":null,"description":"","name":"defined","declarations":[],"required":true,"type":{"name":"(message?: Message<{}> | undefined) => any"}},"required":{"defaultValue":null,"description":"","name":"required","declarations":[],"required":true,"type":{"name":"(message?: Message<{}> | undefined) => any"}},"notRequired":{"defaultValue":null,"description":"","name":"notRequired","declarations":[],"required":true,"type":{"name":"() => any"}},"nullable":{"defaultValue":null,"description":"","name":"nullable","declarations":[],"required":true,"type":{"name":"{ (isNullable?: true | undefined): any; (isNullable: false): any; }"}},"test":{"defaultValue":null,"description":"Adds a test function to the schema's queue of tests.\ntests can be exclusive or non-exclusive.\n\n- exclusive tests, will replace any existing tests of the same name.\n- non-exclusive: can be stacked\n\nIf a non-exclusive test is added to a schema with an exclusive test of the same name\nthe exclusive test is removed and further tests of the same name will be stacked.\n\nIf an exclusive test is added to a schema with non-exclusive tests of the same name\nthe previous tests are removed and further tests of the same name will replace each other.","name":"test","declarations":[],"required":true,"type":{"name":"{ (options: TestConfig<any, any>): AnyObjectSchema; (test: TestFunction<any, any>): AnyObjectSchema; (name: string, test: TestFunction<...>): AnyObjectSchema; (name: string, message: Message<...>, test: TestFunction<...>): AnyObjectSchema; }"}},"when":{"defaultValue":null,"description":"","name":"when","declarations":[],"required":true,"type":{"name":"{ (options: ConditionOptions<AnyObjectSchema>): AnyObjectSchema; (keys: string | string[], options: ConditionOptions<AnyObjectSchema>): AnyObjectSchema; }"}},"typeError":{"defaultValue":null,"description":"","name":"typeError","declarations":[],"required":true,"type":{"name":"(message: Message<{}>) => AnyObjectSchema"}},"oneOf":{"defaultValue":null,"description":"","name":"oneOf","declarations":[],"required":true,"type":{"name":"<U extends any>(enums: (Reference<unknown> | Maybe<U>)[], message?: Message<{ values: any; }> | undefined) => AnyObjectSchema"}},"notOneOf":{"defaultValue":null,"description":"","name":"notOneOf","declarations":[],"required":true,"type":{"name":"<U extends any>(enums: (Reference<unknown> | Maybe<U>)[], message?: Message<{ values: any; }> | undefined) => AnyObjectSchema"}},"strip":{"defaultValue":null,"description":"","name":"strip","declarations":[],"required":true,"type":{"name":"(strip?: boolean | undefined) => AnyObjectSchema"}}}}