{"tags":{},"filePath":"/Users/eelco/Development/appulse/saas-ui/packages/saas-ui-auth/src/index.ts","description":"","displayName":"AuthProvider","methods":[],"props":{"onLoadUser":{"defaultValue":{"value":"() => Promise.resolve(null)"},"description":"Loads user data after authentication","name":"onLoadUser","parent":{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"},"declarations":[{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"}],"required":false,"type":{"name":"(() => Promise<TUser | null>)"}},"onSignup":{"defaultValue":{"value":"() => Promise.resolve(null)"},"description":"The signup method","name":"onSignup","parent":{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"},"declarations":[{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"}],"required":false,"type":{"name":"((params: AuthParams, options?: AuthOptions<ExtraAuthOptions>) => Promise<TUser | null>) | undefined"}},"onLogin":{"defaultValue":{"value":"() => Promise.resolve(null)"},"description":"The login method","name":"onLogin","parent":{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"},"declarations":[{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"}],"required":false,"type":{"name":"((params: AuthParams, options?: AuthOptions<ExtraAuthOptions>) => Promise<TUser | null>) | undefined"}},"onResetPassword":{"defaultValue":null,"description":"Request to reset a password.","name":"onResetPassword","parent":{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"},"declarations":[{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"}],"required":false,"type":{"name":"((params: Required<Pick<AuthParams, \"email\">>, options?: AuthOptions<ExtraAuthOptions>) => Promise<void>)"}},"onUpdatePassword":{"defaultValue":null,"description":"Update the password.","name":"onUpdatePassword","parent":{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"},"declarations":[{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"}],"required":false,"type":{"name":"((params: Required<Pick<AuthParams, \"password\">>, options?: AuthOptions<ExtraAuthOptions>) => Promise<...>)"}},"onVerifyOtp":{"defaultValue":{"value":"() => Promise.resolve(null)"},"description":"Verify an one time password (2fa)","name":"onVerifyOtp","parent":{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"},"declarations":[{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"}],"required":false,"type":{"name":"((params: OtpParams, options?: AuthOptions<ExtraAuthOptions>) => Promise<boolean | null>) | undefined"}},"onLogout":{"defaultValue":{"value":"() => Promise.resolve()"},"description":"The logout method","name":"onLogout","parent":{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"},"declarations":[{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"}],"required":false,"type":{"name":"((options?: AuthOptions<ExtraAuthOptions>) => Promise<unknown>)"}},"onAuthStateChange":{"defaultValue":null,"description":"Should trigger whenever the authentication state changes","name":"onAuthStateChange","parent":{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"},"declarations":[{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"}],"required":false,"type":{"name":"((callback: AuthStateChangeCallback<TUser>) => UnsubscribeHandler)"}},"onGetToken":{"defaultValue":null,"description":"Return the session token","name":"onGetToken","parent":{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"},"declarations":[{"fileName":"saas-ui/packages/saas-ui-auth/src/provider.tsx","name":"AuthProviderProps"}],"required":false,"type":{"name":"(() => Promise<AuthToken>)"}}}}